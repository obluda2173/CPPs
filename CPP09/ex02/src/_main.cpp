/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   _main.cpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: erian <erian@student.42.fr>                +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/03/20 13:53:26 by erian             #+#    #+#             */
/*   Updated: 2025/03/26 10:11:41 by erian            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "PmergeMe.hpp"

/*

GENREAL IDEA

unsorted:
11 2 17 0 16 8 6 15 10 3 21 1 18 9 14 19 12 5 4 20 13 7

1st
[11 2] [17 0] [16 8] [6 15] [10 3] [21 1] [18 9] [14 19] [12 5] [4 20] [13 7]
[2 11] [0 17] [8 16] [6 15] [3 10] [1 21] [9 18] [14 19] [5 12] [4 20] [7 13]

2nd
[[2 11] [0 17]] [[8 16] [6 15]] [[3 10] [1 21]] [[9 18] [14 19]] [[5 12] [4 20]] [7 13]
[[2 11] [0 17]] [[6 15] [8 16]] [[3 10] [1 21]] [[9 18] [14 19]] [[5 12] [4 20]] [7 13]

3rd
[[[2 11] [0 17]] [[6 15] [8 16]]] [[[3 10] [1 21]] [[9 18] [14 19]]] [[5 12] [4 20]] [7 13]
[[[6 15] [8 16]] [[2 11] [0 17]]] [[[9 18] [14 19]] [[3 10] [1 21]]] [[5 12] [4 20]] [7 13]

4th
[[[[6 15] [8 16]] [[2 11] [0 17]]] [[[9 18] [14 19]] [[3 10] [1 21]]]] [[5 12] [4 20]] [7 13]
[[[[6 15] [8 16]] [[2 11] [0 17]]] [[[9 18] [14 19]] [[3 10] [1 21]]]] [[5 12] [4 20]] [7 13]

main:
[[6 15 8 16 2 11 0 17] [9 18 14 19 3 10 1 21]]

non-participating:
[5 12 4 20 7 13]

4th 
[[6 15 8 16 2 11 0 17] [9 18 14 19 3 10 1 21] 5 12 4 20 7 13]
[[6 15 8 16 2 11 0 17] [9 18 14 19 3 10 1 21] 5 12 4 20 7 13]

3rd 
[[6 15 8 16] [2 11 0 17] [9 18 14 19] [3 10 1 21] [5 12 4 20] 7 13]
[[6 15 8 16] [2 11 0 17] [9 18 14 19] [5 12 4 20] [3 10 1 21] 7 13]

2nd
[[6 15] [8 16] [2 11] [0 17] [9 18] [14 19] [5 12] [4 20] [3 10] [1 21] [7 13]]
[[3 10] [2 11] [5 12] [7 13] [6 15] [8 16] [0 17] [9 18] [14 19] [4 20] [1 21]]

1st
[3 10 2 11 5 12 7 13 6 15 8 16 0 17 9 18 14 19 4 20 1 21]
[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21]

DONE

comments: 
какой-то прям супер уебанский sorting algorithm, просто пиздец, как и нахуя его блять придумали

*/

static bool isValidNumber(const std::string& number) {
	return !number.empty() && number.find_first_not_of("1234567890") == std::string::npos;
}

int main(int ac, char **av) {
	if (ac < 2) {
		std::cerr << ERROR << "Error: No numbers provided" << NC << std::endl;
		return 1;
	}
	
	std::vector<int> vec;
	std::deque<int> deq;

	for (int i = 1; i < ac; i++) {
		if (!isValidNumber(av[i]) || std::strtol(av[i], NULL, 10) < 0) {
			std::cerr << ERROR << "Error: Invalid input '" << av[i] << "'" << NC << std::endl;
			return 1;
		}
		int num = static_cast<int>(std::strtol(av[i], NULL, 10));
		vec.push_back(num);
		deq.push_back(num);
	}

	PmergeMe sorter;
	sorter.sortAndMeasure(vec, deq);
}